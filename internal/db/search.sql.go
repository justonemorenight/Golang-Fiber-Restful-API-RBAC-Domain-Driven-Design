// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: search.sql

package db

import (
	"context"
)

const searchUsers = `-- name: SearchUsers :many
SELECT id, name, email, password, created_at, updated_at
FROM users
WHERE 
    CASE 
        WHEN $1::text != '' THEN
            name ILIKE '%' || $1 || '%' OR
            email ILIKE '%' || $1 || '%'
        ELSE true
    END
ORDER BY created_at DESC
LIMIT $2 OFFSET $3
`

type SearchUsersParams struct {
	Column1 string `json:"column_1"`
	Limit   int32  `json:"limit"`
	Offset  int32  `json:"offset"`
}

func (q *Queries) SearchUsers(ctx context.Context, arg SearchUsersParams) ([]User, error) {
	rows, err := q.db.Query(ctx, searchUsers, arg.Column1, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []User{}
	for rows.Next() {
		var i User
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Email,
			&i.Password,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
